// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  isGuest   Boolean  @default(false)
  password  String?
  nickname  String   @unique
  color     String
  createdAt DateTime @default(now())

  gamePlayers GamePlayer[] // Participaciones en partidas
  spectators  Spectator[] // Partidas donde fue espectador
  shots       Shot[] // Disparos realizados
}

model Game {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  status    String // Ej: "waiting", "in_progress", "finished"
  joinCode  String   @unique

  gamePlayers GamePlayer[] // Jugadores en esta partida
  spectators  Spectator[] // Espectadores conectados
  shots       Shot[] // Disparos realizados en esta partida
}

model GamePlayer {
  id       Int       @id @default(autoincrement())
  user     User      @relation(fields: [userId], references: [id])
  userId   Int
  game     Game      @relation(fields: [gameId], references: [id])
  gameId   Int
  board    Json // Estado del tablero de ese jugador
  team     Int? // Número de equipo (si aplica)
  isWinner Boolean   @default(false)
  leftAt   DateTime? // Si abandonó la partida
}

model Spectator {
  id     Int  @id @default(autoincrement())
  game   Game @relation(fields: [gameId], references: [id])
  gameId Int
  user   User @relation(fields: [userId], references: [id])
  userId Int
}

model Shot {
  id        Int      @id @default(autoincrement())
  game      Game     @relation(fields: [gameId], references: [id])
  gameId    Int
  shooter   User     @relation(fields: [shooterId], references: [id])
  shooterId Int
  type      String // "normal", "bomb", "missile", etc.
  target    Json // Ej: { x: 3, y: 5 } o lista de coordenadas
  createdAt DateTime @default(now())
}
